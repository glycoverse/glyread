[{"path":[]},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://glycoverse.github.io/glyread/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://glycoverse.github.io/glyread/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to glyread","title":"Contributing to glyread","text":"outlines propose change glyread. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://glycoverse.github.io/glyread/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to glyread","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://glycoverse.github.io/glyread/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to glyread","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://glycoverse.github.io/glyread/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to glyread","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"glycoverse/glyread\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://glycoverse.github.io/glyread/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to glyread","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://glycoverse.github.io/glyread/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to glyread","text":"Please note glyread project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://glycoverse.github.io/glyread/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 glyread authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://glycoverse.github.io/glyread/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with glyread","title":"Getting help with glyread","text":"Thanks using glyread! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://glycoverse.github.io/glyread/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with glyread","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://glycoverse.github.io/glyread/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with glyread","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://glycoverse.github.io/glyread/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with glyread","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://glycoverse.github.io/glyread/articles/glyread.html","id":"the-great-glycoproteomics-data-chaos","dir":"Articles","previous_headings":"","what":"The Great Glycoproteomics Data Chaos 📊","title":"Get Started with glyread","text":"Picture : ’ve just finished running glycoproteomics experiment favorite identification software—maybe pGlyco3, MSFragger-Glyco, Byonic. ’re excited dive results, reality hits: ’re staring massive spreadsheet 120+ columns, cryptic column names, data scattered everywhere like confetti celebration gone wrong! Sound familiar? Welcome wonderful world glycoproteomics data formats! software tool speaks unique “dialect”—one calls “Proteins,” another might call “Protein.Accessions,” yet another prefers “UniProt_IDs.” ’s like trying conversation Tower Babel, data scientists. Enter glyread—universal translator! 🌟 Think glyread personal data butler speaks fluent “software chaos” translates everything beautiful, organized, analysis-ready data. wrestling column names, manual reformatting, pulling hair inconsistent formats. Just clean, tidy data ’s ready fun part: actual analysis! 🎯 Important Note: functions glyread return glyexp::experiment() object—lingua franca glycoverse ecosystem. haven’t met elegant data structure yet, highly recommend taking quick detour introduction first. Trust us, ’s worth journey! 🚀","code":"library(glyread) library(glyexp) library(readr)"},{"path":"https://glycoverse.github.io/glyread/articles/glyread.html","id":"a-real-world-example-taming-the-pglyco3-pglycoquant-beast","dir":"Articles","previous_headings":"","what":"A Real-World Example: Taming the pGlyco3 + pGlycoQuant Beast 🐉","title":"Get Started with glyread","text":"Let’s dive classic glycoproteomics workflow ’ll make appreciate glyread’s magic! Setup: ’re using pGlyco3 (glycopeptide identification wizard 🧙‍♂️) paired pGlycoQuant (quantification maestro 🎼). dynamic duo incredibly powerful, output? Well, let’s just say ’s… comprehensive. ’s typical pGlycoQuant output file looks like: ’s 120 columns pure, unadulterated data chaos! comprehensive output fantastic software interoperability, ’s like trying find needle haystack just want get analysis. actually need (needle haystack): 🧬 Glycoform descriptions: proteins, sites, glycan compositions, glycan structures 📊 Quantification results: actual numbers pGlycoQuant old way: Manually wrestling 120-column monster, writing custom parsing scripts, debugging column name mismatches, generally questioning life choices. glyread way: One function call. Seriously. ✨ Meet read_pglyco3_pglycoquant()—new best friend: Ta-da! Look beautiful transformation! 120-column chaos organized elegance one line code. Let’s peek treasures ’ve extracted: 🏷️ Variable Information - Meet Glycopeptides: 📋 Sample Information - Know Experiments: 📊 Expression Matrix - Data’s Heart Soul: magic? essential information downstream analysis carefully extracted, cleaned, packaged beautiful glyexp::experiment() object. data archaeology—just clean, analysis-ready data! ✨","code":"read_tsv(\"glycopeptides.list\") #> New names: #> Rows: 500 Columns: 120 #> ── Column specification #> ──────────────────────────────────────────────────────── Delimiter: \"\\t\" chr #> (13): GlySpec, PepSpec, RawName, Peptide, Mod, Glycan(H,N,A,F), GlycanC... dbl #> (105): Scan, RT, PrecursorMH, PrecursorMZ, Charge, Rank, PeptideMH, GlyI... lgl #> (2): Empty_Separator, ...120 #> ℹ Use `spec()` to retrieve the full column specification for this data. ℹ #> Specify the column types or set `show_col_types = FALSE` to quiet this message. #> • `` -> `...120` #> # A tibble: 500 × 120 #>    GlySpec      PepSpec RawName  Scan    RT PrecursorMH PrecursorMZ Charge  Rank #>    <chr>        <chr>   <chr>   <dbl> <dbl>       <dbl>       <dbl>  <dbl> <dbl> #>  1 20241224-LX… 202412… 202412…   266  58.1       2880.        961.      3     1 #>  2 20241224-LX… 202412… 202412…  2870 621.        3537.        885.      4     1 #>  3 20241224-LX… 202412… 202412…  2878 622.        3246.        812.      4     1 #>  4 20241224-LX… 202412… 202412…  2884 623.        3537.        708.      5     1 #>  5 20241224-LX… 202412… 202412…  3015 642.        2932.        978.      3     1 #>  6 20241224-LX… 202412… 202412…  3079 652.        3829.        958.      4     1 #>  7 20241224-LX… 202412… 202412…  3118 657.        3537.        885.      4     1 #>  8 20241224-LX… 202412… 202412…  3121 657.        3829.        767.      5     1 #>  9 20241224-LX… 202412… 202412…  3129 658.        3537.        708.      5     1 #> 10 20241224-LX… 202412… 202412…  3137 659.        3246.        812.      4     1 #> # ℹ 490 more rows #> # ℹ 111 more variables: Peptide <chr>, Mod <chr>, PeptideMH <dbl>, #> #   `Glycan(H,N,A,F)` <chr>, GlycanComposition <chr>, PlausibleStruct <chr>, #> #   GlyID <dbl>, GlyFrag <chr>, GlyMass <dbl>, GlySite <dbl>, TotalScore <dbl>, #> #   PepScore <dbl>, GlyScore <dbl>, CoreMatched <dbl>, MassDeviation <dbl>, #> #   PPM <dbl>, GlyIonRatio <dbl>, byIonRatio <dbl>, czIonRatio <dbl>, #> #   GlyDecoy <dbl>, PepDecoy <dbl>, Ion_163.06 <dbl>, Ion_366.14 <dbl>, … exp <- read_pglyco3_pglycoquant(\"glycopeptides.list\", sample_info = \"sample_info.csv\") #> ℹ Reading data #> ℹ Finding leader proteins #> ✔ Finding leader proteins [159ms] #>  #> ℹ Reading dataℹ Parsing glycan compositions and structures #> ✔ Parsing glycan compositions and structures [250ms] #>  #> ℹ Reading data✔ Reading data [745ms] exp #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Expression matrix: 12 samples, 298 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: peptide, peptide_site, protein, protein_site, gene, and glycan_composition get_var_info(exp) #> # A tibble: 298 × 7 #>    variable peptide   peptide_site protein protein_site gene  glycan_composition #>    <chr>    <chr>            <int> <chr>          <int> <chr> <comp>             #>  1 GP1      JKTQGK               1 P08185           176 SERP… Hex(5)HexNAc(4)Ne… #>  2 GP2      HSHNJJSS…            5 P04196           344 HRG   Hex(5)HexNAc(4)Ne… #>  3 GP3      HSHNJJSS…            5 P04196           344 HRG   Hex(5)HexNAc(4)    #>  4 GP4      HSHNJJSS…            5 P04196           344 HRG   Hex(5)HexNAc(4)Ne… #>  5 GP5      HJSTGCLR             2 P10909           291 CLU   Hex(6)HexNAc(5)    #>  6 GP6      HSHNJJSS…            5 P04196           344 HRG   Hex(5)HexNAc(4)Ne… #>  7 GP7      HSHNJJSS…            6 P04196           345 HRG   Hex(5)HexNAc(4)    #>  8 GP8      HSHNJJSS…            5 P04196           344 HRG   Hex(5)HexNAc(4)dH… #>  9 GP9      HSHNJJSS…            5 P04196           344 HRG   Hex(4)HexNAc(3)    #> 10 GP10     HSHNJJSS…            5 P04196           344 HRG   Hex(4)HexNAc(4)Ne… #> # ℹ 288 more rows get_sample_info(exp) #> # A tibble: 12 × 2 #>    sample                  group #>    <chr>                   <chr> #>  1 20241224-LXJ-Nglyco-H_1 H     #>  2 20241224-LXJ-Nglyco-H_2 H     #>  3 20241224-LXJ-Nglyco-H_3 H     #>  4 20241224-LXJ-Nglyco-M_1 M     #>  5 20241224-LXJ-Nglyco-M_2 M     #>  6 20241224-LXJ-Nglyco-M_3 M     #>  7 20241224-LXJ-Nglyco-Y_1 Y     #>  8 20241224-LXJ-Nglyco-Y_2 Y     #>  9 20241224-LXJ-Nglyco-Y_3 Y     #> 10 20241224-LXJ-Nglyco-C_1 C     #> 11 20241224-LXJ-Nglyco-C_2 C     #> 12 20241224-LXJ-Nglyco-C_3 C get_expr_mat(exp)[1:5, ] #>     20241224-LXJ-Nglyco-H_1 20241224-LXJ-Nglyco-H_2 20241224-LXJ-Nglyco-H_3 #> GP1                31054.12                      NA                457398.3 #> GP2                      NA               136556.05                      NA #> GP3                      NA                15717.87                427312.0 #> GP4               285613.66               268250.71               2621248.6 #> GP5             27588555.39             19527065.26              32930089.6 #>     20241224-LXJ-Nglyco-M_1 20241224-LXJ-Nglyco-M_2 20241224-LXJ-Nglyco-M_3 #> GP1                 7616346                 7391049                 6267864 #> GP2                22675686                16675442               114423292 #> GP3                10813133                 9746325                25348175 #> GP4               993255511              1099069766              1106268049 #> GP5                32500720                      NA                26346060 #>     20241224-LXJ-Nglyco-Y_1 20241224-LXJ-Nglyco-Y_2 20241224-LXJ-Nglyco-Y_3 #> GP1                23059718                15010885                  740942 #> GP2               115717950                90594397                55977605 #> GP3                33607210                21284262                28608146 #> GP4               547660361               753702172               556784303 #> GP5                21780632                19862189                12764805 #>     20241224-LXJ-Nglyco-C_1 20241224-LXJ-Nglyco-C_2 20241224-LXJ-Nglyco-C_3 #> GP1                      NA                      NA                10655.62 #> GP2               305840564               428631806             16064212.10 #> GP3                32885077                35418588              6372648.51 #> GP4               669332806               696696106            112287653.59 #> GP5                25946392                18860878              4316119.03"},{"path":"https://glycoverse.github.io/glyread/articles/glyread.html","id":"peek-under-the-hood-the-magic-explained","dir":"Articles","previous_headings":"","what":"Peek Under the Hood: The Magic Explained 🔧✨","title":"Get Started with glyread","text":"Curious just happened? Let’s lift hood see sophisticated machinery read_pglyco3_pglycoquant() runs behind scenes. Spoiler alert: ’s lot heavy lifting don’t ! 8-Step Data Transformation Dance: Smart File Reading: Reads data intelligent column type detection—“everything character” surprises! Column Cleaning Magic: Extracts clean UniProt accessions messy “Proteins” columns handles pesky formatting inconsistencies. Protein Inference Intelligence: Runs sophisticated “parsimony” algorithm resolve protein assignment ambiguities—biology complicated, data doesn’t ! 📊 PSM--Glycopeptide Aggregation: Intelligently combines PSM-level quantification meaningful glycopeptide-level measurements. Sample Information Validation: Cross-checks sample names ensures everything matches perfectly. 🎯 Data Extraction: Carefully extracts variable information expression matrix maintaining data integrity. 🧬 Glycan Parsing Power: Leverages amazing glyparse package parse glycan compositions structures proper data types. Final Assembly: Packages everything beautiful, analysis-ready experiment() object. result? used take hours custom scripting now happens seconds, bulletproof reliability!","code":""},{"path":"https://glycoverse.github.io/glyread/articles/glyread.html","id":"meet-the-whole-glyread-family","dir":"Articles","previous_headings":"","what":"Meet the Whole glyread Family!","title":"Get Started with glyread","text":"One function , ’s much ! glyread like Swiss Army knife glycoproteomics data—speaks language virtually every major identification quantification workflow . 🔧 🌟 Complete Toolkit: read_byonic_byologic(): dynamic duo Byonic identification + Byologic quantification read_byonic_pglycoquant(): Byonic’s precision meets pGlycoQuant’s power read_msfragger(): MSFragger-Glyco’s --one identification quantification magic read_pglyco3(): Pure pGlyco3 built-quantification capabilities read_pglyco3_pglycoquant(): workflow just explored—pGlyco3 + pGlycoQuant perfection Coming Soon Package Near : ’re actively working supporting Glyco-Decipher, GPQuest, exciting tools. glycoproteomics software landscape evolving rapidly, glyread evolving right alongside ! 🚀 💡 Pro Tip: matter workflow choose, can expect consistent, clean data format side. ’s like universal remote glycoproteomics data!","code":""},{"path":"https://glycoverse.github.io/glyread/articles/glyread.html","id":"the-universal-data-language-consistent-columns-across-all-functions","dir":"Articles","previous_headings":"","what":"The Universal Data Language: Consistent Columns Across All Functions","title":"Get Started with glyread","text":"’s beautiful part: matter glyread function use, ’ll always get consistent, predictable data structure. ’s like universal translator ensures everyone speaks language! 🏷️ Variable Information Columns - Standard Cast: peptide 🧬: peptide sequence (character) - protein’s building blocks peptide_site: Glycosylation site peptide (integer) - magic happens protein 🏷️: UniProt accession (character) - protein’s official ID card protein_site 🎯: Glycosylation site protein (integer) - full-length coordinates gene 🧬: Gene symbol (character) - genetic blueprint behind glycan_composition: glyrepr::glycan_composition() object - ’s glycan glycan_structure: glyrepr::glycan_structure() object - ’s connected 🎯 Special Note Last Two: glycan_composition glycan_structure columns aren’t just plain text—’re sophisticated data types amazing glyrepr package. Think smart objects know glycan math! 💡 Pro Tip: Getting familiar glyrepr objects absolutely worth investment. unlock whole world glycan analysis capabilities impossible plain text. Trust us one!","code":""},{"path":"https://glycoverse.github.io/glyread/articles/glyread.html","id":"your-glycoverse-adventure-awaits","dir":"Articles","previous_headings":"","what":"Your Glycoverse Adventure Awaits! 🚀✨","title":"Get Started with glyread","text":"Congratulations! ’ve just mastered art taming glycoproteomics data chaos glyread. just beginning journey glycoverse ecosystem! 🎯 Next Destinations: glyclean: data preprocessing powerhouse! Think Marie Kondo glycoproteomics data—’ll help clean, filter, organize experiments spark joy. glymotif: motif hunting expedition! Discover hidden patterns recurring structural themes glycan data. ’s like detective, sugar molecules! 📊 glyexp: experimental data command center! Master experiment() object unlock full power synchronized data manipulation. Best Part? Since ’re now fluent experiment() objects thanks glyread, packages feel like natural extensions workflow. ’s like learning new language suddenly able read entire library! Happy glycan hunting! 🧬🎯 Remember: Great glycoproteomics analysis starts great data import. ’ve got tools—now go make discoveries! 💫","code":""},{"path":"https://glycoverse.github.io/glyread/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Fu. Author, maintainer.","code":""},{"path":"https://glycoverse.github.io/glyread/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu B (2025). glyread: Read process glycomics glycoproteomics data. R package version 0.5.0, https://glycoverse.github.io/glyread/.","code":"@Manual{,   title = {glyread: Read and process glycomics and glycoproteomics data},   author = {Bin Fu},   year = {2025},   note = {R package version 0.5.0},   url = {https://glycoverse.github.io/glyread/}, }"},{"path":"https://glycoverse.github.io/glyread/index.html","id":"glyread-","dir":"","previous_headings":"","what":"Read and process glycomics and glycoproteomics data","title":"Read and process glycomics and glycoproteomics data","text":"goal glyread read process quantification results common glycomics glycoproteomics software, Byonic, StrucGP, pGlyco, convert glyexp::expriment() object (glyexp package) analysis.","code":""},{"path":"https://glycoverse.github.io/glyread/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read and process glycomics and glycoproteomics data","text":"can install development version glyread GitHub :","code":"# install.packages(\"pak\") pak::pak(\"glycoverse/glyread\")"},{"path":"https://glycoverse.github.io/glyread/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Read and process glycomics and glycoproteomics data","text":"Getting started: Reference: ","code":""},{"path":"https://glycoverse.github.io/glyread/index.html","id":"role-in-glycoverse","dir":"","previous_headings":"","what":"Role in glycoverse","title":"Read and process glycomics and glycoproteomics data","text":"glyread entry point glycoverse ecosystem. provides unified interface reading processing data various glycomics glycoproteomics software, converting glyexp::experiment() object analysis.","code":""},{"path":"https://glycoverse.github.io/glyread/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Read and process glycomics and glycoproteomics data","text":"Used pGlyco3 pGlycoQuant glycopeptide identification quantification? Try read_pglyco3_pglycoquant()!","code":"library(glyread)  exp <- read_pglyco3_pglycoquant(   \"path/to/pGlyco3-pGlycoQuant/result/Quant.spectra.list\",   sample_info = \"path/to/sample_info.csv\",   quant_method = \"label-free\",   glycan_type = \"N\" )"},{"path":"https://glycoverse.github.io/glyread/reference/glyread-package.html","id":null,"dir":"Reference","previous_headings":"","what":"glyread: Read and process glycomics and glycoproteomics data — glyread-package","title":"glyread: Read and process glycomics and glycoproteomics data — glyread-package","text":"package reads processes quantification results common glycomics glycoproteomics software, Byonic, StrucGP, pGlyco, converts `glyexp_experiment` object ([glyexp](https://github.com/glycoverse/glyexp) package) analysis.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/reference/glyread-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"glyread: Read and process glycomics and glycoproteomics data — glyread-package","text":"Maintainer: Bin Fu 23110220018@m.fudan.edu.cn (ORCID)","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Byonic-Byologic result — read_byonic_byologic","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"used Byonic intact glycopeptide identification, used Byologic quantification, function . reads result file returns glyexp::experiment() object. Currently label-free quantification supported.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"","code":"read_byonic_byologic(   fp,   sample_info = NULL,   quant_method = c(\"label-free\", \"TMT\"),   glycan_type = c(\"N\", \"O\"),   sample_name_converter = NULL,   orgdb = \"org.Hs.eg.db\" )"},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"fp File path pGlycoQuant result file. sample_info File path sample information file (csv), sample information data.frame/tibble. quant_method Quantification method. Either \"label-free\" \"TMT\". glycan_type Glycan type. Either \"N\" \"O\". Default \"N\". sample_name_converter function convert sample names file paths. function take character vector old sample names return new sample names. Note sample names sample_info match new names. NULL, original names kept. orgdb name OrgDb package use UniProt gene symbol conversion. Default \"org.Hs.eg.db\".","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"which-file-to-use-","dir":"Reference","previous_headings":"","what":"Which file to use?","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"Open .blgc file result folder PMI-Byos. \"Peptide List\" panel (usually bottom right), click \"Export content table CSV file\" button. exported .csv file file use.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"multisite-glycopeptides","dir":"Reference","previous_headings":"","what":"Multisite glycopeptides","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"Currently, single-site glycopeptides supported. Multisite glycopeptides removed.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"variable-information","dir":"Reference","previous_headings":"","what":"Variable information","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"following columns found variable information tibble: peptide: character, peptide sequence peptide_site: integer, site glycosylation peptide protein: character, protein accession protein_site: integer, site glycosylation protein gene: character, gene name (symbol) glycan_composition: glyrepr::glycan_composition(), glycan compositions.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"sample-information","dir":"Reference","previous_headings":"","what":"Sample information","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"sample information file csv file first column named sample, rest columns sample information. sample column must match RawName column pGlyco3 result file, although order can different. can put useful information sample information file. Recommended columns : group: grouping conditions, e.g. \"control\" \"tumor\", required downstream analyses batch: batch information, required batch effect correction","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_byologic.html","id":"aggregation","dir":"Reference","previous_headings":"","what":"Aggregation","title":"Read Byonic-Byologic result — read_byonic_byologic","text":"pGlyco3 performs quantification PSM level. level information detailed downstream analyses. function aggregate PSMs glycopeptides summation. glycopeptide (unique combination \"peptide\", \"peptide_site\", \"protein\", \"protein_site\", \"gene\", \"glycan_composition\", \"glycan_structure\"), sum quantifications PSMs belong glycopeptide.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"used Byonic intact glycopeptide identification, used pGlycoQuant quantification, function . reads pGlycoQuant result file returns glyexp::experiment() object. Currently label-free quantification supported.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"","code":"read_byonic_pglycoquant(   fp,   sample_info = NULL,   quant_method = c(\"label-free\", \"TMT\"),   glycan_type = c(\"N\", \"O\"),   sample_name_converter = NULL,   orgdb = \"org.Hs.eg.db\",   parse_structure = TRUE )"},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"fp File path pGlycoQuant result file. sample_info File path sample information file (csv), sample information data.frame/tibble. quant_method Quantification method. Either \"label-free\" \"TMT\". glycan_type Glycan type. Either \"N\" \"O\". Default \"N\". sample_name_converter function convert sample names file paths. function take character vector old sample names return new sample names. Note sample names sample_info match new names. NULL, original names kept. orgdb name OrgDb package use UniProt gene symbol conversion. Default \"org.Hs.eg.db\". parse_structure Logical. Whether parse glycan structures. TRUE, glycan structures parsed included var_info glycan_structure column. FALSE (default), structure parsing skipped structure-related columns removed.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"which-file-to-use-","dir":"Reference","previous_headings":"","what":"Which file to use?","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"use \"Quant.spectra.list\" file pGlycoQuant result folder. Files Byonic result folder needed. instructions use Byonic pGlycoQuant, please refer manual: pGlycoQuant.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"multisite-glycopeptides","dir":"Reference","previous_headings":"","what":"Multisite glycopeptides","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"Currently, single-site glycopeptides supported. Multisite glycopeptides removed.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"variable-information","dir":"Reference","previous_headings":"","what":"Variable information","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"following columns found variable information tibble: peptide: character, peptide sequence peptide_site: integer, site glycosylation peptide protein: character, protein accession protein_site: integer, site glycosylation protein gene: character, gene name (symbol) glycan_composition: glyrepr::glycan_composition(), glycan compositions. glycan_structure: glyrepr::glycan_structure(), glycan structures (parse_structure = TRUE).","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"sample-information","dir":"Reference","previous_headings":"","what":"Sample information","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"sample information file csv file first column named sample, rest columns sample information. sample column must match RawName column pGlyco3 result file, although order can different. can put useful information sample information file. Recommended columns : group: grouping conditions, e.g. \"control\" \"tumor\", required downstream analyses batch: batch information, required batch effect correction","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_byonic_pglycoquant.html","id":"aggregation","dir":"Reference","previous_headings":"","what":"Aggregation","title":"Read Byonic-pGlycoQuant result — read_byonic_pglycoquant","text":"pGlyco3 performs quantification PSM level. level information detailed downstream analyses. function aggregate PSMs glycopeptides summation. glycopeptide (unique combination \"peptide\", \"peptide_site\", \"protein\", \"protein_site\", \"gene\", \"glycan_composition\", \"glycan_structure\"), sum quantifications PSMs belong glycopeptide.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":null,"dir":"Reference","previous_headings":"","what":"Read GlyHunter result — read_glyhunter","title":"Read GlyHunter result — read_glyhunter","text":"function reads GlyHunter result file returns glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read GlyHunter result — read_glyhunter","text":"","code":"read_glyhunter(   fp,   sample_info = NULL,   glycan_type = c(\"N\", \"O\"),   sample_name_converter = NULL )"},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read GlyHunter result — read_glyhunter","text":"fp File path GlyHunter result file. sample_info File path sample information file (csv), sample information data.frame/tibble. glycan_type Glycan type. Either \"N\" \"O\". Default \"N\". sample_name_converter function convert sample names file paths. function take character vector old sample names return new sample names. Note sample names sample_info match new names. NULL, original names kept.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read GlyHunter result — read_glyhunter","text":"glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":"which-file-to-use-","dir":"Reference","previous_headings":"","what":"Which file to use?","title":"Read GlyHunter result — read_glyhunter","text":"Use \"summary_area.csv\" file GlyHunter result folder. edit necessary.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":"variable-information","dir":"Reference","previous_headings":"","what":"Variable information","title":"Read GlyHunter result — read_glyhunter","text":"following columns found variable information tibble: glycan_composition: glyrepr::glycan_composition(), glycan compositions.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_glyhunter.html","id":"sample-information","dir":"Reference","previous_headings":"","what":"Sample information","title":"Read GlyHunter result — read_glyhunter","text":"sample information file csv file first column named sample, rest columns sample information. sample column must match RawName column pGlyco3 result file, although order can different. can put useful information sample information file. Recommended columns : group: grouping conditions, e.g. \"control\" \"tumor\", required downstream analyses batch: batch information, required batch effect correction","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/reference/read_msfragger.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MSFragger-Glyco result — read_msfragger","title":"Read MSFragger-Glyco result — read_msfragger","text":"MSFragger-Glyco software glycopeptide identification quantification. function reads result file returns glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_msfragger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MSFragger-Glyco result — read_msfragger","text":"","code":"read_msfragger(   dp,   sample_info = NULL,   quant_method = c(\"label-free\", \"TMT\"),   glycan_type = c(\"N\", \"O\"),   sample_name_converter = NULL )"},{"path":"https://glycoverse.github.io/glyread/reference/read_msfragger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MSFragger-Glyco result — read_msfragger","text":"dp directory path MSFragger-Glyco result folder. sample_info File path sample information file (csv), sample information data.frame/tibble. quant_method Quantification method. Either \"label-free\" \"TMT\". glycan_type Glycan type. Either \"N\" \"O\". Default \"N\". sample_name_converter function convert sample names file paths. function take character vector old sample names return new sample names. Note sample names sample_info match new names. NULL, original names kept.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_msfragger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MSFragger-Glyco result — read_msfragger","text":"glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_msfragger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read MSFragger-Glyco result — read_msfragger","text":"function uses \"psm.tsv\" file sample folder. Sample names extracted file paths. parent \"psm.tsv\" file. example, \"msfragger_result/H1/psm.tsv\" named \"H1\".","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_msfragger.html","id":"variable-information","dir":"Reference","previous_headings":"","what":"Variable information","title":"Read MSFragger-Glyco result — read_msfragger","text":"following columns found variable information tibble: peptide: character, peptide sequence peptide_site: integer, site glycosylation peptide protein: character, protein accession protein_site: integer, site glycosylation protein gene: character, gene name (symbol) glycan_composition: glyrepr::glycan_composition(), glycan compositions.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":null,"dir":"Reference","previous_headings":"","what":"Read pGlyco3 result — read_pglyco3","title":"Read pGlyco3 result — read_pglyco3","text":"pGlyco3 software intact glycopeptide identification quantification. function reads result file returns glyexp::experiment() object. Currently label-free quantification supported.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read pGlyco3 result — read_pglyco3","text":"","code":"read_pglyco3(   fp,   sample_info = NULL,   quant_method = c(\"label-free\", \"TMT\"),   glycan_type = c(\"N\", \"O\"),   sample_name_converter = NULL,   parse_structure = FALSE )"},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read pGlyco3 result — read_pglyco3","text":"fp File path pGlyco3 result file. sample_info File path sample information file (csv), sample information data.frame/tibble. quant_method Quantification method. Either \"label-free\" \"TMT\". glycan_type Glycan type. Either \"N\" \"O\". Default \"N\". sample_name_converter function convert sample names file paths. function take character vector old sample names return new sample names. Note sample names sample_info match new names. NULL, original names kept. parse_structure Logical. Whether parse glycan structures. TRUE, glycan structures parsed included var_info glycan_structure column. FALSE (default), structure parsing skipped structure-related columns removed.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read pGlyco3 result — read_pglyco3","text":"glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"which-file-to-use-","dir":"Reference","previous_headings":"","what":"Which file to use?","title":"Read pGlyco3 result — read_pglyco3","text":"use result file pGlyco3 contains quantification information. file columns including RawName, MonoArea, Peptide, Proteins, Genes, GlycanComposition, PlausibleStruct, GlySite, ProSites.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"sample-information","dir":"Reference","previous_headings":"","what":"Sample information","title":"Read pGlyco3 result — read_pglyco3","text":"sample information file csv file first column named sample, rest columns sample information. sample column must match RawName column pGlyco3 result file, although order can different. can put useful information sample information file. Recommended columns : group: grouping conditions, e.g. \"control\" \"tumor\", required downstream analyses batch: batch information, required batch effect correction","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"protein-inference","dir":"Reference","previous_headings":"","what":"Protein inference","title":"Read pGlyco3 result — read_pglyco3","text":"pGlyco3 reports protein groups. , shared glycopeptides reported group proteins separated \";\". function automatically performs protein inference using parsimony method find leader proteins. ensures glycopeptide uniquely mapped single protein, gene, glycosite.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"aggregation","dir":"Reference","previous_headings":"","what":"Aggregation","title":"Read pGlyco3 result — read_pglyco3","text":"pGlyco3 performs quantification PSM level. level information detailed downstream analyses. function aggregate PSMs glycopeptides summation. glycopeptide (unique combination \"peptide\", \"peptide_site\", \"protein\", \"protein_site\", \"gene\", \"glycan_composition\", \"glycan_structure\"), sum quantifications PSMs belong glycopeptide.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"variable-information","dir":"Reference","previous_headings":"","what":"Variable information","title":"Read pGlyco3 result — read_pglyco3","text":"following columns found variable information tibble: peptide: character, peptide sequence peptide_site: integer, site glycosylation peptide protein: character, protein accession (protein inference) protein_site: integer, site glycosylation protein (protein inference) gene: character, gene name (symbol) (protein inference) glycan_composition: glyrepr::glycan_composition(), glycan compositions. glycan_structure: glyrepr::glycan_structure(), glycan structures (parse_structure = TRUE).","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3.html","id":"glycan-structures","dir":"Reference","previous_headings":"","what":"Glycan structures","title":"Read pGlyco3 result — read_pglyco3","text":"pGlyco3 reports \"plausible structure\" glycan. can set parse_structure = TRUE parse structures \"glycan_structure\" column glyrepr::glycan_structure() vector. However, please take caution structures, pGlyco3 strict quality control glycan structure annotations.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"used pGlyco3 intact glycopeptide identification, used pGlycoQuant quantification, function . reads pGlycoQuant result file returns glyexp::experiment() object. Currently label-free quantification supported.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"","code":"read_pglyco3_pglycoquant(   fp,   sample_info = NULL,   quant_method = c(\"label-free\", \"TMT\"),   glycan_type = c(\"N\", \"O\"),   sample_name_converter = NULL,   parse_structure = FALSE )"},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"fp File path pGlycoQuant result file. sample_info File path sample information file (csv), sample information data.frame/tibble. quant_method Quantification method. Either \"label-free\" \"TMT\". glycan_type Glycan type. Either \"N\" \"O\". Default \"N\". sample_name_converter function convert sample names file paths. function take character vector old sample names return new sample names. Note sample names sample_info match new names. NULL, original names kept. parse_structure Logical. Whether parse glycan structures. TRUE, glycan structures parsed included var_info glycan_structure column. FALSE (default), structure parsing skipped structure-related columns removed.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"which-file-to-use-","dir":"Reference","previous_headings":"","what":"Which file to use?","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"use \"Quant.spectra.list\" file pGlycoQuant result folder. Files pGlyco3 result folder needed. instructions use pGlyco3 pGlycoQuant, please refer manual: pGlycoQuant.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"variable-information","dir":"Reference","previous_headings":"","what":"Variable information","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"following columns found variable information tibble: peptide: character, peptide sequence peptide_site: integer, site glycosylation peptide protein: character, protein accession (protein inference) protein_site: integer, site glycosylation protein (protein inference) gene: character, gene name (symbol) (protein inference) glycan_composition: glyrepr::glycan_composition(), glycan compositions. glycan_structure: glyrepr::glycan_structure(), glycan structures (parse_structure = TRUE).","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"sample-information","dir":"Reference","previous_headings":"","what":"Sample information","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"sample information file csv file first column named sample, rest columns sample information. sample column must match RawName column pGlyco3 result file, although order can different. can put useful information sample information file. Recommended columns : group: grouping conditions, e.g. \"control\" \"tumor\", required downstream analyses batch: batch information, required batch effect correction","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"protein-inference","dir":"Reference","previous_headings":"","what":"Protein inference","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"pGlyco3 reports protein groups. , shared glycopeptides reported group proteins separated \";\". function automatically performs protein inference using parsimony method find leader proteins. ensures glycopeptide uniquely mapped single protein, gene, glycosite.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"aggregation","dir":"Reference","previous_headings":"","what":"Aggregation","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"pGlyco3 performs quantification PSM level. level information detailed downstream analyses. function aggregate PSMs glycopeptides summation. glycopeptide (unique combination \"peptide\", \"peptide_site\", \"protein\", \"protein_site\", \"gene\", \"glycan_composition\", \"glycan_structure\"), sum quantifications PSMs belong glycopeptide.","code":""},{"path":"https://glycoverse.github.io/glyread/reference/read_pglyco3_pglycoquant.html","id":"glycan-structures","dir":"Reference","previous_headings":"","what":"Glycan structures","title":"Read pGlyco3-pGlycoQuant result — read_pglyco3_pglycoquant","text":"pGlyco3 reports \"plausible structure\" glycan. can set parse_structure = TRUE parse structures \"glycan_structure\" column glyrepr::glycan_structure() vector. However, please take caution structures, pGlyco3 strict quality control glycan structure annotations.","code":""},{"path":[]},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"glyread 0.5.0","text":"Add parse_structure parameter read_pglyco3() read_pglyco3_pglycoquant(). FALSE (default), glycan structure strings parsed, “glycan_structure” column variable information tibble. improves performance structure-based analysis needed, avoids implicitly implying structures given pGlyco3 accurate. Well, .","code":""},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-improvements-and-bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"glyread 0.5.0","text":"read_pglyco3() read_pglyco3_pglycoquant() now correctly parse “pH” “aH” monosaccharides glycan compositions glycan structures. Messages protein inference changes “Performing protein inference” “Finding leader proteins” better illustrate actually happening. Relavent documentations also updated. Add “Varaible information” section documentations functions. includes descriptions columns variable information tibble. Fix bug Uniprot isomers (“O75882-2”) parsed correctly.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-improvements-0-4-2","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyread 0.4.2","text":"Remove redundant emoji “Getting Started” vignette.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-improvements-0-4-1","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyread 0.4.1","text":"Add “Getting Started” vignette.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"glyread 0.4.0","text":"big update! addition several new workflows supported, redesign API make read_xxx() functions behave consistently. Now read_xxx() functions try return experiments similar variable information format. ensure , functions perform protein inference automatically resolve protein ambiguity, functions add “gene” column mapping protein accessions gene symbols. Besides, read_xxx() functions now aggregate quantification PSM glycopeptide level. Detailed list: Add read_pglyco3() read results pGlyco3 (built-quantification). Add read_byonic_byologic() read results Byonic Byologic quantification. functions now automatically perform PSM aggregation ensure glycopeptide-level quantification. Redesign read_msfragger() support multiple PSM files. awkward manul post-processing needed anymore.","code":""},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyread 0.4.0","text":"Remove protein_inference_method parameter read_pglyco3_pglycoquant(). function now performs “parsimony” protein inference algorithm. Optimize logic protein inference. ties, alphabetical order used.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyread 0.3.2","text":"Use AnnotationDbi::mapIds() convert protein IDs gene symbols. Remove clusterProfiler Suggests.","code":""},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"glyread 0.3.2","text":"Try fix R CMD check errors Github Actions.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-improvements-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyread 0.3.1","text":"read_byonic_pglycoquant() now perform gene symbol conversion clusterProfiler specified OrgDb package (e.g., org.Hs.eg.db) installed. , gene column omitted message shown. improves robustness minimal CI environments. clusterProfiler org.Hs.eg.db now listed Suggests, Imports.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"glyread 0.3.0","text":"Add read_byonic_pglycoquant() reading results Byonic identification pGlycoQuant quantification. Add read_msfragger() reading results MSFragger-Glyco. read_pglyco3_pglycoquant() now performs protein inference automatically resolve protein ambiguity. means, variable information tibble now contains “protein”, “gene”, “protein_site” columns. previous ambiguous “proteins”, “genes”, “protein_sites” columns removed.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyread/news/index.html","id":"minor-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"glyread 0.2.1","text":"“proteins” column read_pglyco3_pglycoquant() now contains protein uniprot accessions, e.g. “P08185”. multiple proteins exist, separated semicolon, e.g. “P08185;P04196”.","code":""}]
