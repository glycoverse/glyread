% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pglyco3-pglycoquant.R
\name{read_pglyco3_pglycoquant}
\alias{read_pglyco3_pglycoquant}
\title{Read pGlyco3-pGlycoQuant result}
\usage{
read_pglyco3_pglycoquant(
  fp,
  sample_info_fp = NULL,
  name = NULL,
  quant_method,
  tmt_type = NULL,
  ref_channel = NULL,
  parse_structure = FALSE,
  quant_aggr_method = c("gf", "gp", "gfs", "gps", "det")
)
}
\arguments{
\item{fp}{File path of the pGlyco3 result file.}

\item{sample_info_fp}{File path of the sample information file.}

\item{name}{Name of the experiment. If not provided, a default name with
current time will be used.}

\item{quant_method}{Quantification method. Either "label-free" or "TMT".}

\item{tmt_type}{TMT type. Required if \code{quant_method} is "TMT".
Options are "TMT-6plex", "TMT-10plex", "TMT-11plex", "TMTpro-10plex",
"TMTpro-16plex", "TMTpro-18plex".}

\item{ref_channel}{Reference channel for TMT normalization.
A character scalar. Required if \code{quant_method} is "TMT".
The reference channel must be one of the valid TMT channels.
\itemize{
\item TMT-6plex: 126, 127, 128, 129, 130, 131.
\item TMT-10plex: 126, 127N, 127C, 128N, 128C, 129N, 129C, 130N, 130C, 131.
\item TMT-11plex: 126, 127N, 127C, 128N, 128C, 129N, 129C, 130N, 130C, 131N, 131C.
\item TMTpro-10plex: 126, 127N, 128N, 129N, 130N, 131N, 132N, 133N, 134N, 135N.
\item TMTpro-16plex: 126, 127N, 127C, 128N, 128C, 129N, 129C, 130N, 130C, 131N,
131C, 132N, 132C, 133N, 133C, 134N.
\item TMTpro-18plex: 126, 127N, 127C, 128N, 128C, 129N, 129C, 130N, 130C, 131N,
131C, 132N, 132C, 133N, 133C, 134N, 134C, 135N.
}}

\item{parse_structure}{Whether to parse glycan structures. Default is \code{FALSE}.
Although the results from pGlyco3 provide structural information,
many of these structures are speculative, and pGlyco3 doesnâ€™t include
any quality control for the structural speculation process.
If you choose to enable this option,
please interpret the analysis results with caution.
For more rigorous structural information, we recommend using StrucGP.}

\item{quant_aggr_method}{Aggregation method for quantification results.
\itemize{
\item "gf": Glycoform level. The default. Aggregates all PSMs of the same
combination of protein, protein site, and glycan composition.
\item "gp": Glycopeptide level. Aggregates all PSMs of the same
combination of peptide, peptide site, and glycan composition.
\item "gfs": Glycoform level with glycan structure.
Aggregates all PSMs of the same combination of protein, protein site,
and glycan structure.
\item "gps": Glycopeptide level with glycan structure.
Aggregates all PSMs of the same combination of peptide, peptide site,
and glycan structure.
\item "det": Detailed level. Aggregates all PSMs of the same combination of
peptide, protein, gene, glycan composition, glycan structure, peptide site,
protein site, charge, and modifications.
}}
}
\value{
An \code{\link[glyexp:experiment]{glyexp::experiment()}} object.
}
\description{
If you used pGlyco3 for intact glycopeptide identification,
and used pGlycoQuant for quantification, this is the function for you.
It reads the pGlycoQuant result file and returns an \code{\link[glyexp:experiment]{glyexp::experiment()}} object.
Both label-free and TMT quantification are supported.
}
\section{Input}{
You should use the "Quant.spectra.list" file in the pGlycoQuant result folder.
Files from pGlyco3 result folder are not needed.
For instructions on how to use pGlyco3 and pGlycoQuant, please refer to
the manual: \href{https://github.com/Power-Quant/pGlycoQuant/blob/main/Manual\%20for\%20pGlycoQuant_v202211.pdf}{pGlycoQuant}.

The sample information file should be a \code{csv} file with the first column
named \code{sample}, and the rest of the columns are sample information.
The \code{sample} column must match the \code{RawName} column in the pGlyco3 result file,
although the order can be different.

For results from TMT quantification, the sample information file should have
two additional columns besides \code{sample}: \code{raw_name} and \code{channel}.
\code{raw_name} refers to the raw file names,
matching the \code{RawName} column in the pGlyco3 result file.
\code{channel} refers to the TMT channel names.
For valid TMT channels, see the \code{ref_channel} argument.

You can put any useful information in the sample information file.
Recommended columns are:
\itemize{
\item \code{group}: grouping or conditions, e.g. "control" or "tumor",
required for most downstream analyses
\item \code{batch}: batch information, required for batch effect correction
\item \code{bio_replicate}:  Indicates the identity of biologically distinct samples.
While the \code{sample} column is typically used as a unique identifier for each run,
\code{bio_replicate} specifies whether the samples originate from the same biological source.
In common experimental designs,
multiple technical replicates are often derived from the same biological sample,
making the bio_replicate column essential for distinguishing
biological replicates from technical replicates.
}
}

\section{Output}{
The result is an \code{\link[glyexp:experiment]{glyexp::experiment()}} object.
If \code{parse_structure} is \code{TRUE} (by default),
a list of parsed \code{glycan_graph} objects will be stored in the experiment,
with the glycan structure strings as names.
It can be accessed by \code{exp$glycan_graphs} or \code{exp[["glycan_graphs"]]}.

The following columns are in the variable information tibble:
\itemize{
\item \code{charge}: integer, charge state
\item \code{peptide}: character, peptide sequence
\item \code{modifications}: character, modifications other than glycosylation,
separated by semicolon, e.g. \verb{5,Carbamidomethyl[C];10,Carbamidomethyl[C]}
\item \code{glycan_composition}: character, glycan composition, e.g. "H5N4F1A1"
\item \code{glycan_structure}: character, pGlyco-style structure strings, renamed from
\code{PlausibleStruct} in the original file
\item \code{peptide_site}: integer, site of glycosylation on peptide
\item \code{proteins}: character, protein names, separated by semicolon
\item \code{genes}: character, gene names, separated by semicolon
\item \code{protein_sites}: character, site of glycosylation on protein,
separated by semicolon
}

Glycan compositions are reformatted into condensed format,
e.g. "H5N4F1A1" for "H(5)N(4)A(1)F(1)".
}

\section{Aggregation}{
pGlycoQuant quantifies glycopeptides at the PSM level.
Therefore, a glycopeptide could have multiple rows in the result file,
due to different charge states, modifications, or just duplicate identifications.
In this regard, we need to aggregate the quantification results
to the level we are interested in.
This function provides several aggregation methods,
specified by the \code{quant_aggr_method} argument.
The most commonly used method is "gf" (glycoform), which aggregates
all PSMs of the same combination of protein, protein site, and glycan composition.
The word "aggregate" here means "sum" for label-free quantification,
and "take the median" for TMT quantification.
For other aggregation methods, see the \code{quant_aggr_method} argument.
}

